.TH "PAPI_create_eventset" 3 "Fri Feb 22 2019" "Version 5.7.0.0" "PAPI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PAPI_create_eventset \- 
.PP
Create a new empty PAPI EventSet\&.  

.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 

.PP
.nf
@par C Interface:
\#include <papi.h> @n
PAPI_create_eventset( int * EventSet );

PAPI_create_eventset creates a new EventSet pointed to by EventSet, 
which must be initialized to PAPI_NULL before calling this routine. 
The user may then add hardware events to the event set by calling 
PAPI_add_event or similar routines.

@note PAPI-C uses a late binding model to bind EventSets to components. 
When an EventSet is first created it is not bound to a component. 
This will cause some API calls that modify EventSet options to fail. 
An EventSet can be bound to a component explicitly by calling 
PAPI_assign_eventset_component or implicitly by calling PAPI_add_event
or similar routines. 

@param *EventSet
    Address of an integer location to store the new EventSet handle.

@exception PAPI_EINVAL 
    The argument handle has not been initialized to PAPI_NULL or the argument is a NULL pointer.

@exception PAPI_ENOMEM 
    Insufficient memory to complete the operation. 

@par Examples:

.fi
.PP
 
.PP
.nf
*   int EventSet = PAPI_NULL;
*   if ( PAPI_create_eventset( &EventSet ) != PAPI_OK )
*   handle_error( 1 );
*   // Add Total Instructions Executed to our EventSet
*   if ( PAPI_add_event( EventSet, PAPI_TOT_INS)  != PAPI_OK )
*   handle_error( 1 ); 
*   

.fi
.PP
.PP
\fBSee Also:\fP
.RS 4
\fBPAPI_add_event\fP 
.br
 \fBPAPI_assign_eventset_component\fP 
.br
 \fBPAPI_destroy_eventset\fP 
.br
 \fBPAPI_cleanup_eventset\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for PAPI from the source code\&.
