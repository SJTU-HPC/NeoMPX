.TH "PAPI_thread_id" 3 "Fri Feb 22 2019" "Version 5.7.0.0" "PAPI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PAPI_thread_id \- 
.PP
Get the thread identifier of the current thread\&.  

.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 

.PP
.nf
@retval PAPI_EMISC 
    is returned if there are no threads registered.
@retval -1 
    is returned if the thread id function returns an error. 

This function returns a valid thread identifier. 
It calls the function registered with PAPI through a call to 
PAPI_thread_init().

.fi
.PP
.PP
.PP
.nf
unsigned long tid;

if ((tid = PAPI_thread_id()) == (unsigned long int)-1 )
    exit(1);

printf("Initial thread id is: %lu\n", tid );
 *  
.fi
.PP
 
.PP
\fBSee Also:\fP
.RS 4
\fBPAPI_thread_init\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for PAPI from the source code\&.
