.TH "PAPI_remove_named_event" 3 "Fri Feb 22 2019" "Version 5.7.0.0" "PAPI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PAPI_remove_named_event \- 
.PP
removes a named hardware event from a PAPI event set\&.  

.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 

.PP
.nf
A hardware event can be either a PAPI Preset or a native hardware 
event code.  For a list of PAPI preset events, see PAPI_presets or 
run the papi_avail utility in the PAPI distribution.  PAPI Presets 
can be passed to PAPI_query_event to see if they exist on the 
underlying architecture.  For a list of native events available on 
the current platform, run papi_native_avail in the PAPI distribution. 

@par C Interface:
\#include <papi.h> @n
int PAPI_remove_named_event( int  EventSet, const char *EventName );

@param[in] EventSet
   -- an integer handle for a PAPI event set as created 
         by PAPI_create_eventset
@param[in] EventName
   -- a defined event such as PAPI_TOT_INS or a native event. 

@retval PAPI_OK 
    Everything worked.
@retval PAPI_EINVAL 
    One or more of the arguments is invalid.
@retval PAPI_ENOINIT 
    The PAPI library has not been initialized.
@retval PAPI_ENOEVST 
    The EventSet specified does not exist.
@retval PAPI_EISRUN 
    The EventSet is currently counting events.
@retval PAPI_ECNFLCT 
    The underlying counter hardware can not count this 
           event and other events in the EventSet simultaneously.
@retval PAPI_ENOEVNT 
    The PAPI preset is not available on the underlying hardware. 

@par Example:

.fi
.PP
 
.PP
.nf
*   char EventName = "PAPI_TOT_INS";
*   int EventSet = PAPI_NULL;
*   int ret;
*
*   // Create an empty EventSet
*   ret = PAPI_create_eventset(&EventSet);
*   if (ret != PAPI_OK) handle_error(ret);
*
*   // Add Total Instructions Executed to our EventSet
*   ret = PAPI_add_named_event(EventSet, EventName);
*   if (ret != PAPI_OK) handle_error(ret);
*
*   // Start counting
*   ret = PAPI_start(EventSet);
*   if (ret != PAPI_OK) handle_error(ret);
*
*   // Stop counting, ignore values
*   ret = PAPI_stop(EventSet, NULL);
*   if (ret != PAPI_OK) handle_error(ret);
*
*   // Remove event
*   ret = PAPI_remove_named_event(EventSet, EventName);
*   if (ret != PAPI_OK) handle_error(ret);
*   

.fi
.PP
.PP
\fBSee Also:\fP
.RS 4
\fBPAPI_remove_event\fP 
.br
 \fBPAPI_query_named_event\fP 
.br
 \fBPAPI_add_named_event\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for PAPI from the source code\&.
