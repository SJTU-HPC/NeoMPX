.TH "PAPI_event_code_to_name" 3 "Fri Feb 22 2019" "Version 5.7.0.0" "PAPI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PAPI_event_code_to_name \- 
.PP
Convert a numeric hardware event code to a name\&.  

.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 

.PP
.nf
@par C Interface:
\#include <papi.h> @n
int PAPI_event_code_to_name( int  EventCode, char * EventName );

PAPI_event_code_to_name is used to translate a 32-bit integer PAPI event 
code into an ASCII PAPI event name. 
Either Preset event codes or Native event codes can be passed to this routine. 
Native event codes and names differ from platform to platform.

@param EventCode 
    The numeric code for the event. 
@param *EventName
    A string containing the event name as listed in PAPI_presets or discussed in PAPI_native.

@retval PAPI_EINVAL 
    One or more of the arguments is invalid.
@retval PAPI_ENOTPRESET 
    The hardware event specified is not a valid PAPI preset.
@retval PAPI_ENOEVNT 
    The hardware event is not available on the underlying hardware. 

@par Examples:

.fi
.PP
 
.PP
.nf
*   int EventCode, EventSet = PAPI_NULL;
*  int Event, number;
*   char EventCodeStr[PAPI_MAX_STR_LEN];
*   // Create the EventSet
*   if ( PAPI_create_eventset( &EventSet ) != PAPI_OK )
*   handle_error( 1 );
*   // Add Total Instructions Executed to our EventSet
*   if ( PAPI_add_event( EventSet, PAPI_TOT_INS ) != PAPI_OK )
*   handle_error( 1 );
*   number = 1;
*   if ( PAPI_list_events( EventSet, &Event, &number ) != PAPI_OK )
*   handle_error(1);
*   // Convert integer code to name string
*   if ( PAPI_event_code_to_name( Event, EventCodeStr ) != PAPI_OK )
*   handle_error( 1 );
*   printf( "Event Name: %s\n", EventCodeStr );
*   

.fi
.PP
.PP
\fBSee Also:\fP
.RS 4
\fBPAPI_event_name_to_code\fP 
.PP
\fBPAPI_remove_event\fP 
.PP
\fBPAPI_get_event_info\fP 
.PP
\fBPAPI_enum_event\fP 
.PP
\fBPAPI_add_event\fP 
.PP
PAPI_presets 
.PP
PAPI_native 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for PAPI from the source code\&.
