.TH "PAPI_get_executable_info" 3 "Fri Feb 22 2019" "Version 5.7.0.0" "PAPI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PAPI_get_executable_info \- 
.PP
Get the executable's address space info\&.  

.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 

.PP
.nf
@par C Interface:
\#include <papi.h> @n
const PAPI_exe_info_t *PAPI_get_executable_info( void );

This function returns a pointer to a structure containing information 
about the current program.

@param fullname
    Fully qualified path + filename of the executable.
@param name
    Filename of the executable with no path information.
@param text_start, text_end
    Start and End addresses of program text segment.
@param data_start, data_end
    Start and End addresses of program data segment.
@param bss_start, bss_end
    Start and End addresses of program bss segment.

@retval PAPI_EINVAL 
    One or more of the arguments is invalid. 

@par Examples:

.fi
.PP
 
.PP
.nf
*   const PAPI_exe_info_t *prginfo = NULL;
*   if ( ( prginfo = PAPI_get_executable_info( ) ) == NULL )
*   exit( 1 );
*   printf( "Path+Program: %s\n", exeinfo->fullname );
*   printf( "Program: %s\n", exeinfo->address_info\&.name );
*   printf( "Text start: %p, Text end: %p\n", exeinfo->address_info\&.text_start, exeinfo->address_info\&.text_end) ;
*   printf( "Data start: %p, Data end: %p\n", exeinfo->address_info\&.data_start, exeinfo->address_info\&.data_end );
*   printf( "Bss start: %p, Bss end: %p\n", exeinfo->address_info\&.bss_start, exeinfo->address_info\&.bss_end );
*   

.fi
.PP
.PP
\fBSee Also:\fP
.RS 4
\fBPAPI_get_opt\fP 
.PP
\fBPAPI_get_hardware_info\fP 
.PP
\fBPAPI_exe_info_t\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for PAPI from the source code\&.
