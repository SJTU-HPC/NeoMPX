.TH "PAPI_epc" 3 "Fri Feb 22 2019" "Version 5.7.0.0" "PAPI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PAPI_epc \- 
.PP
Simplified call to get arbitrary events per cycle, real and processor time\&.  

.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 

.PP
\fBC Interface: \fP
.RS 4
#include <\fBpapi\&.h\fP> 
.br
int \fBPAPI_epc( int event, float *rtime, float *ptime, long long *ref, long long *core, long long *evt, float *epc )\fP;
.RE
.PP
\fBParameters:\fP
.RS 4
\fIevent\fP event code to be measured (0 defaults to PAPI_TOT_INS) 
.br
\fI*rtime\fP total realtime since the first call 
.br
\fI*ptime\fP total process time since the first call 
.br
\fI*ref\fP incremental reference clock cycles since the last call 
.br
\fI*core\fP incremental core clock cycles since the last call 
.br
\fI*evt\fP total events since the first call 
.br
\fI*epc\fP incremental events per cycle since the last call
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIPAPI_EINVAL\fP The counters were already started by something other than \fBPAPI_epc()\fP\&. 
.br
\fIPAPI_ENOEVNT\fP One of the requested events does not exist\&. 
.br
\fIPAPI_ENOMEM\fP Insufficient memory to complete the operation\&.
.RE
.PP
The first call to \fBPAPI_epc()\fP will initialize the PAPI High Level interface, set up the counters to monitor the user specified event, PAPI_TOT_CYC, and PAPI_REF_CYC (if it exists) and start the counters\&.
.PP
Subsequent calls will read the counters and return total real time, total process time, total event counts since the start of the measurement and the core and reference cycle count and EPC rate since the latest call to \fBPAPI_epc()\fP\&.
.PP
A call to \fBPAPI_stop_counters()\fP will stop the counters from running and then calls such as \fBPAPI_start_counters()\fP or other rate calls can safely be used\&.
.PP
\fBPAPI_epc\fP can provide a more detailed look at algorithm efficiency in light of clock variability in modern cpus\&. MFLOPS is no longer an adequate description of peak performance if clock rates can arbitrarily speed up or slow down\&. By allowing a user specified event and reporting reference cycles, core cycles and real time, \fBPAPI_epc\fP provides the information to compute an accurate effective clock rate, and an accurate measure of computational throughput\&.
.PP
\fBSee Also:\fP
.RS 4
\fBPAPI_flips()\fP 
.PP
\fBPAPI_flops()\fP 
.PP
\fBPAPI_ipc()\fP 
.PP
\fBPAPI_stop_counters()\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for PAPI from the source code\&.
